% git-mux(1) git-mux user manual
% Ben Elan <no-reply@benelan.dev>
% 2023-08-12

# NAME

**git-mux** - a git + tmux lovechild for blazingly fast movement between projects and tasks

# SYNOPSIS

**git mux clone** *repository*  
**git mux project** [*path*]  
**git mux task** [*branch-name*] [*window-name*]  
**git mux task** *path* [*window-name*] [*remote-command*...]  
**git mux config**  
**git mux help**  

# COMMANDS

**c**, **clone**
:   Clone and configure a bare **git**(1) *repository* for use with worktrees.

**p**, **project**
:   Create or switch to a **project**, which is a **tmux**(1) session.
    Projects are also usually (but not required to be) a **git**(1) repo.

**t**, **task**
:   Create, switch, or send text to a **task**, which is a **tmux**(1) window.
    Tasks are also usually (but not required to be) a **git-worktree**(1)
    or **git-branch**(1).

**h**, **help**
:   Print a concise help message to **stdout**(3).

**config**
:   Print the current configuration values to **stdout**(3).
    See the *ENVIRONMENT* section for configuration options.

# EXAMPLES

**git mux p**
:   Select a **project**, then create and/or switch to its **tmux**(1) session.

**git mux project ~/projects/my-app**
:   Directly create and/or switch to a **project** (useful for aliases/keybindings).

**git mux t**
:   Select a **git-branch**(1), then create and/or switch to its
    **git-worktree**(1) and **tmux**(1) window.

**git mux task feature/123**
:   If "feature/123" is a valid *path*, it will be used for the **task**.
    Otherwise assume it is a *branch-name*, creating the **git-branch**(1) if it doesn't exist.
    If the **project** is a bare repo, create and/or switch to its **git-worktree**(1).
    Otherwise checkout the branch.

    By default, all of the above cases create and/or switch to a **tmux**(1) window
    named "123", via **basename**(1). The **tmux**(1) *window-name* can be specified
    with an additional argument.

**git mux task ~/projects/my-app npm_stuff npm i && npm run build**
:   Run commands in a **tmux**(1) window named "npm_stuff" without switching to it.
    Specifying a *window-name* is required when sending commands.

# ENVIRONMENT VARIABLES

**git-mux** can be configured with the following environment variables:

**GIT_MUX_PROJECTS**
:   Space-separated list of projects for selection. The **project** paths
    must be absolute, and can start with "~".

**GIT_MUX_PROJECT_PARENTS**
:   Space-separated list of directories that contain projects.
    Defaults to **\$PROJECTS** if set, otherwise **\$HOME**.
    Uses **find**(1) to get child directories (depth of 1),
    which are then used for **$GIT_MUX_PROJECTS**.

    This option is ignored if **$GIT_MUX_PROJECTS** is already set.

**GIT_MUX_SELECT_CMD**
:   Command used to select a **project**. Defaults to using **fzf**(1).
    This can be changed to any command, as long as it receives the directory
    list from **stdin**(3) and sends a single, selected directory to **stdout**(3).

**GIT_MUX_BRANCH_PREFIX**
:   A *prefix* string to prepend to new branches created via **task**.
    Unset by default.

    When set, the resulting **git-branch**(1) name is
    "*prefix*/*branch-name*". This option is ignored if
    the provided *branch-name* already contains a "/".

    Some common examples are **"feature"** and **"$(id -un)"**.

**GIT_MUX_NEW_WORKTREE_CMD**
:   Specify a set of commands to execute in the **tmux**(1) window when a new
    **git-worktree**(1) is created via the **task** command. Unset by default.

    For example: **"[ -f './package.json' ] && npm i"**

**GIT_MUX_LOGS**
:   Path to a log file. Logs are disabled if set to "0" or unset, which
    is the default.

    If set to "1", a default path is determined by first checking
    if **\$XDG_STATE_HOME** is set, then if **\$HOME/.local/state** is a directory,
    and finally falling back to **\$HOME**. The log file will be create as
    *git-mux/logs* in the determined directory.

# COMPATIBILITY

The following non-standard utilities/tools are used by **git-mux**:

- **tmux**(1) - Required.  
- **git**(1)  - Required by the task command if the following argument is not a valid path.  
- **fzf**(1)  - Required by default, but can be changed using **\$GIT_MUX_SELECT_CMD** configuration option. See the *ENVIRONMENT* section.

**git-mux** should be POSIX compliant (other than the non-standard utilities listed above), meaning it will likely work on your system. Unless you're using Windows without WSL, in which case I don't know how you ended up reading this sentence in the first place.

Please log an issue if you are on a Unix machine and experience any compatability issues.

# BUGS

If you experience any problems with **git-mux** or have ideas for a new feature, please submit an issue on GitHub:  
**https://github.com/benelan/git-mux/issues**

# SEE ALSO

**git-repository-layout**(7), **git-worktree**(1), **tmux**(1), **fzf**(1)
